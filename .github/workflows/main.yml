name: CI

on:
  push:
    branches: ["main"]
    
jobs:
  CI: 
    runs-on: ubuntu-latest

    steps:
    - name: Chechout code
      uses: actions/checkout@v4.1.1
    
    - name: Setup NodeJS
      uses: actions/setup-node@v4.0.3
      with:
        node-version: '22.x'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Get short commit hash
      id: commit_hash
      run: echo "::set-output name=hash::$(git rev-parse --short HEAD)"
          
    - name: Install dependencies
      run: npm install

    - name: Login to Docker Hub
      uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
      with: 
        username: ${{secrets.DOCKER_USER}}
        password: ${{secrets.DOCKER_PWD}}
        
    - name: Build Docker image version tag
      run: docker build -t ${{ secrets.DOCKER_USER }}/app-k8s:v1.${{ github.run_number }}.${{ steps.commit_hash.outputs.hash }} .

    - name: Build Docker image latest tag
      run: docker build -t ${{ secrets.DOCKER_USER }}/app-k8s:latest .

    - name: Push image Docker with version tag
      run: docker push ${{ secrets.DOCKER_USER }}/app-k8s:v1.${{ github.run_number }}.${{ steps.commit_hash.outputs.hash }}

    - name: Push image Docker with latest tag 
      run: docker push ${{ secrets.DOCKER_USER }}/app-k8s:latest

  CD: 
    runs-on: ubuntu-latest
    needs: [CI]
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Get short commit hash
        id: commit_hash
        run: echo "::set-output name=hash::$(git rev-parse --short HEAD)"
      
      - name: Define K8S Context
        uses: Azure/k8s-set-context@v3.0
        with: 
          method: kubeconfig
          kubeconfig: ${{secrets.K8S_CONFIG}}
            
      - name: Deploy to Kubernetes
        uses: Azure/k8s-deploy@v4.9
        with:
          images: ${{ secrets.DOCKER_USER }}/app-k8s:v1.${{ github.run_number }}.${{ steps.commit_hash.outputs.hash }}
          manifests: |
            k8s/app1/deployment.yaml
            k8s/app2/deployment.yaml
            k8s/proxy/ingress.yaml
            k8s/cert/issuer.yaml
